# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  provider: String!
  login: String!
  displayName: String!
  email: String!
  avatarUrl: String!
}

type Card {
  id: ID!
  index: Float!
  listId: String!
  boardId: String!
  content: String!
  author: User!
  solved: Boolean!
  likes: [Like!]!
}

type Like {
  authorId: ID!
  cardId: ID!
}

type List {
  id: ID!
  index: Int!
  name: String!
  cards: [Card!]!
}

type Board {
  id: ID!
  owner: User!
  name: String!
  lists: [List!]!
  createdAt: String!
}

type Query {
  me: User!
  boards: [Board!]!
  board(id: ID!): Board!
}

type Mutation {
  createBoard(board: CreateBoardInput!): Board!
  createList(list: CreateListInput!): List!
  createCard(card: CreateCardInput!): Card!
  updateCard(card: UpdateCardInput!): Card!
  removeCard(id: ID!): Card!
  addCardLike(like: AddCardLikeInput!): Boolean!
  removeCardLike(cardId: ID!): Boolean!
}

input CreateBoardInput {
  name: String!
}

input CreateListInput {
  name: String!
  boardId: ID!
}

input CreateCardInput {
  content: String!
  listId: ID!
  boardId: ID!
}

input UpdateCardInput {
  id: ID!
  content: String
  solved: Boolean
}

input AddCardLikeInput {
  cardId: ID!
  boardId: ID!
}

type Subscription {
  boardUpdated(boardId: ID!): BoardUpdated!
}

union BoardUpdated = CardCreated | CardUpdated | CardRemoved | CardLikeAdded | CardLikeRemoved

type CardCreated {
  payload: Card!
}

type CardUpdated {
  payload: Card!
}

type CardRemoved {
  payload: Card!
}

type CardLikeAdded {
  payload: Like!
}

type CardLikeRemoved {
  payload: Like!
}
